security:
    # Configuration des hashers de mot de passe
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'

    # Configuration des fournisseurs d'utilisateurs
    providers:
        app_user_provider:
            entity:
                class: App\Entity\Utilisateur
                property: email # Utilisez l'email comme identifiant pour l'authentification

    # Configuration des firewalls
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        main:
            lazy: true
            provider: app_user_provider

            # Activer la session pour l'authentification
            stateless: false
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: /profile
            logout:
                path: /logout
                target: app_logout_message
            custom_authenticator: App\Security\SecurityControllerAuthenticator
            entry_point: form_login

    # Contrôle d'accès
    access_control:
        - { path: ^/admin, roles: ROLE_ADMIN }
        - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/employe, roles: ROLE_EMPLOYE }        

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Valeur minimale pour bcrypt
                time_cost: 3 # Valeur minimale pour argon
                memory_cost: 10 # Valeur minimale pour argon
